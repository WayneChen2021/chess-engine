#include "mcst.hpp"

template class MCST<tensorflow::Tensor>;
template class MCST<at::Tensor>;

template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b000000), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b000001), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b000010), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b000011), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b000100), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b000101), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b000110), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b000111), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b001000), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b001001), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b001010), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b001011), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b001100), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b001101), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b001110), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b001111), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b010000), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b010001), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b010010), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b010011), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b010100), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b010101), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b010110), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b010111), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b011000), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b011001), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b011010), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b011011), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b011100), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b011101), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b011110), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b011111), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b100000), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b100001), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b100010), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b100011), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b100100), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b100101), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b100110), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b100111), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b101000), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b101001), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b101010), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b101011), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b101100), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b101101), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b101110), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b101111), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b110000), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b110001), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b110010), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b110011), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b110100), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b110101), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b110110), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b110111), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b111000), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b111001), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b111010), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b111011), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b111100), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b111101), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b111110), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<tensorflow::Tensor>::position_probabilities<BoardStatus(0b111111), tensorflow::SavedModelBundleLite>(MCST<tensorflow::Tensor> &, tensorflow::SavedModelBundleLite &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b000000), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b000001), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b000010), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b000011), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b000100), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b000101), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b000110), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b000111), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b001000), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b001001), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b001010), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b001011), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b001100), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b001101), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b001110), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b001111), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b010000), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b010001), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b010010), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b010011), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b010100), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b010101), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b010110), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b010111), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b011000), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b011001), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b011010), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b011011), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b011100), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b011101), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b011110), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b011111), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b100000), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b100001), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b100010), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b100011), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b100100), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b100101), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b100110), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b100111), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b101000), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b101001), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b101010), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b101011), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b101100), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b101101), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b101110), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b101111), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b110000), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b110001), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b110010), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b110011), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b110100), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b110101), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b110110), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b110111), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b111000), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b111001), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b111010), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b111011), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b111100), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b111101), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b111110), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);
template double MCST<at::Tensor>::position_probabilities<BoardStatus(0b111111), torch::jit::script::Module>(MCST<at::Tensor> &, torch::jit::script::Module &, uint64_t);

template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000000), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000000), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000000), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000000), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000001), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000001), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000001), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000001), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000010), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000010), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000010), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000010), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000011), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000011), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000011), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000011), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000100), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000100), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000100), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000100), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000101), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000101), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000101), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000101), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000110), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000110), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000110), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000110), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000111), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b000111), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000111), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b000111), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001000), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001000), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001000), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001000), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001001), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001001), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001001), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001001), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001010), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001010), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001010), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001010), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001011), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001011), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001011), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001011), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001100), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001100), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001100), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001100), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001101), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001101), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001101), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001101), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001110), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001110), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001110), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001110), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001111), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b001111), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001111), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b001111), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010000), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010000), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010000), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010000), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010001), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010001), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010001), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010001), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010010), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010010), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010010), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010010), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010011), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010011), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010011), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010011), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010100), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010100), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010100), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010100), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010101), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010101), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010101), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010101), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010110), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010110), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010110), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010110), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010111), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b010111), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010111), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b010111), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011000), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011000), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011000), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011000), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011001), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011001), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011001), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011001), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011010), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011010), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011010), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011010), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011011), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011011), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011011), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011011), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011100), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011100), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011100), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011100), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011101), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011101), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011101), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011101), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011110), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011110), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011110), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011110), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011111), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b011111), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011111), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b011111), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100000), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100000), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100000), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100000), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100001), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100001), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100001), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100001), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100010), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100010), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100010), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100010), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100011), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100011), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100011), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100011), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100100), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100100), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100100), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100100), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100101), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100101), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100101), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100101), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100110), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100110), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100110), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100110), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100111), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b100111), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100111), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b100111), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101000), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101000), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101000), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101000), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101001), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101001), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101001), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101001), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101010), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101010), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101010), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101010), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101011), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101011), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101011), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101011), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101100), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101100), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101100), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101100), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101101), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101101), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101101), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101101), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101110), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101110), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101110), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101110), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101111), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b101111), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101111), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b101111), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110000), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110000), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110000), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110000), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110001), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110001), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110001), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110001), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110010), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110010), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110010), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110010), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110011), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110011), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110011), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110011), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110100), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110100), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110100), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110100), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110101), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110101), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110101), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110101), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110110), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110110), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110110), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110110), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110111), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b110111), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110111), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b110111), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111000), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111000), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111000), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111000), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111001), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111001), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111001), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111001), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111010), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111010), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111010), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111010), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111011), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111011), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111011), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111011), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111100), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111100), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111100), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111100), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111101), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111101), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111101), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111101), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111110), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111110), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111110), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111110), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111111), true>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<at::Tensor>::initialize_inputs<BoardStatus(0b111111), false>(MCST<at::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111111), true>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);
template void MCST<tensorflow::Tensor>::initialize_inputs<BoardStatus(0b111111), false>(MCST<tensorflow::Tensor> &, uint64_t, uint64_t);

template MCST<tensorflow::Tensor> *MCST<tensorflow::Tensor>::best_child_search<true>(Params<tensorflow::Tensor> &, MCST<tensorflow::Tensor> &, std::vector<double> &);
template MCST<tensorflow::Tensor> *MCST<tensorflow::Tensor>::best_child_search<false>(Params<tensorflow::Tensor> &, MCST<tensorflow::Tensor> &, std::vector<double> &);
template MCST<at::Tensor> *MCST<at::Tensor>::best_child_search<true>(Params<at::Tensor> &, MCST<at::Tensor> &, std::vector<double> &);
template MCST<at::Tensor> *MCST<at::Tensor>::best_child_search<false>(Params<at::Tensor> &, MCST<at::Tensor> &, std::vector<double> &);

template void MCST<tensorflow::Tensor>::multiple_search<tensorflow::SavedModelBundleLite>(MoveReceiver &, Zobrist &, Params<tensorflow::Tensor> &, MCST<tensorflow::Tensor> *, uint64_t, tensorflow::SavedModelBundleLite &, std::vector<double> &, uint64_t);
template void MCST<at::Tensor>::multiple_search<torch::jit::script::Module>(MoveReceiver &, Zobrist &, Params<at::Tensor> &, MCST<at::Tensor> *, uint64_t, torch::jit::script::Module &, std::vector<double> &, uint64_t);